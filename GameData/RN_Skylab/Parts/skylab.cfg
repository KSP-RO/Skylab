PART
{
// --- general parameters ---
name = skylab
module = Part
author = Raidernick

// --- asset parameters ---
MODEL
	{
	  model = RN_Skylab/Parts/skylab
          scale = 0.80, 0.80, 0.80
	}
//mesh = skylab.mu
scale = 0.80
rescaleFactor = 1
// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z

node_stack_bottom = 0.0, -12.88688, 0.0, 0.0, -1.0, 0.0, 4
node_stack_leftpanel = -3.27775, -2.37469, -1.74273, 0.0, 1.0, 0.0, 2
node_stack_rightpanel = 3.27775, -2.37469, 1.74273, 0.0, 1.0, 0.0, 2
node_stack_mmshield1 = 0, -7.31, 0, 0.0, 1.0, 0.0, 2
node_stack_mmshield2 = 0, -7.31, 0, 0.0, 1.0, 0.0, 2
node_stack_fairing1 = 3.29663, 2.15, 0, 0.0, 1.0, 0.0, 2
node_stack_fairing2 = -3.29663, 2.15, 0, 0.0, 1.0, 0.0, 2
node_stack_fairing3 = 0, 2.15, 3.29663, 0.0, 1.0, 0.0, 2
node_stack_fairing4 = 0, 2.15, -3.29663, 0.0, 1.0, 0.0, 2
node_stack_docking1 = 0, 9.50031, 0, 0.0, 1.0, 0.0, 2
node_stack_docking2 = 0, 7.63632, 1.23869, 0.0, 0.0, 1.0, 2

node_stack_telescope = 0.0, 2.1499, 0.0, 0.0, -1.0, 0.0, 4

//9.80882
//1.56289

// --- editor parameters ---
TechRequired = generalRocketry
entryCost = 4000
cost = 400000
category = Pods
subcategory = 0
title = Skylab
manufacturer = RN Industries
description = Skylab orbital laboratory

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 59
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 48
breakingForce = 50000
breakingTorque = 50000
linearStrength = 22000
angularStrength = 22000
maxTemp = 2000
thermalMassModifier = 2.0
emissiveConstant = 0.95
heatConductivity = 0.04

vesselType = Station

stagingIcon = COMMAND_POD
CrewCapacity = 6

INTERNAL
{
  name = rn_skylab_internal
}

MODULE
{
	name = ModuleCommand
	minimumCrew = 1
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.5
	}
}

RESOURCE
{
	name = ElectricCharge
	amount = 2000
	maxAmount = 2000
}

RESOURCE
{
	name = MonoPropellant
	amount = 100
	maxAmount = 100
}

MODULE
{
	name = ModuleRCS
	thrusterTransformName = RCSthruster 
	thrusterPower = 1
	resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW
	atmosphereCurve
 	{
   	 key = 0 260
  	 key = 1 100
 	}
}

MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 40
	YawTorque = 40
	RollTorque = 20
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.6
	}
}

// Science
MODULE
{
	name = ModuleScienceContainer
	
	reviewActionName = Review Data
	storeActionName = Store Experiments	
	collectActionName = Take Data
	
	evaOnlyStorage = False
	storageRange = 2
	
	allowRepeatedSubjects = True
}

MODULE
{
	name = ModuleScienceExperiment
	experimentID = mobileMaterialsLab

	experimentActionName = Run Lab Experiment
	resetActionName = Reset Lab Experiment

	useStaging = False
	useActionGroups = True
	hideUIwhenUnavailable = True 
	resettable = True
	resettableOnEVA = True
	rerunnable = True
	xmitDataScalar = 0.4
	
	FxModules = 0
}
MODULE
{
	name = ModuleScienceExperiment	
	
	experimentID = crewReport
	
	experimentActionName = Crew Report
	resetActionName = Discard Crew Report
	reviewActionName = Review Report
	
	useStaging = False	
	useActionGroups = True
	hideUIwhenUnavailable = True	
	rerunnable = True
	
	xmitDataScalar = 1.0
}

//Tac Lifesupport
	RESOURCE
	{
		name = Food
		amount = 460.74
		maxAmount = 460.74
	}
	RESOURCE
	{
		name = Water
		amount = 507.5
		maxAmount = 507.5
	}
	RESOURCE
	{
		name = Oxygen
		amount = 77726.13333
		maxAmount = 77726.13333
	}
	RESOURCE
	{
		name = CarbonDioxide
		amount = 0
		maxAmount = 0.1
	}
	RESOURCE
	{
		name = Waste
		amount = 0
		maxAmount = 42
	}
	RESOURCE
	{
		name = WasteWater
		amount = 0
		maxAmount = 0.1
	}

//Connected Living
MODULE
{
	name = ModuleConnectedLivingSpace
	passable = true
}

MODULE
{
name = TankPriorityModule
Priority = 20
}

MODULE
	{
		name = ModuleDataTransmitter
		antennaType = RELAY
		packetInterval = 0.4
		packetSize = 2
		packetResourceCost = 20
		requiredResource = ElectricCharge
		antennaPower = 5000000
	}

MODULE
{
       name = ModuleJettison
       jettisonName = radcvr
       bottomNodeName = bottom
       isFairing = False
       jettisonedObjectMass = 0.01
       jettisonForce = 0.5
       jettisonDirection = 0 1 0
	
}

MODULE
{
name = FSanimateGeneric
animationName = Deploy
startEventGUIName = Deploy Antennae
endEventGUIName = Retract Antennae
toggleActionName = Toggle Antennae
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 1
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 0
}

MODULE
{
name = FSanimateGeneric
animationName = gold_body
startEventGUIName = Deploy Main Body
endEventGUIName = Retract Main Body
toggleActionName = Toggle Main Body
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 2
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 1
}

MODULE
{
name = FSanimateGeneric
animationName = sunshade_bottom
startEventGUIName = Deploy Sunshade
endEventGUIName = Retract Sunshade
toggleActionName = Toggle Sunshade
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 3
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 2
}

MODULE
{
name = FSanimateGeneric
animationName = sunshade_top
startEventGUIName = Deploy Secondary Sunshade
endEventGUIName = Retract Secondary Sunshade
toggleActionName = Toggle Secondary Sunshade
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 4
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 3
}

MODULE
{
name = FSanimateGeneric
animationName = cover_white
startEventGUIName = Deploy Replacement Cover
endEventGUIName = Retract Replacement Cover
toggleActionName = Toggle Replacement Cover
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 5
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 4
}

}
